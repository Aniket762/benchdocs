[{"body":"This page contains documentation details.\n Getting started Installation  This documentation is open-source. Please help improve it by filing issues or pull requests here.  ","link":"https://example.com/docs/","title":"Index"},{"body":" Current releases/images of Bench-routes is not suitable for production loads. If you face any issues, please consider opening issues here.  Bench-routes can be installed in 2 ways:\n Bare metal Docker Installing from source  Bare metal This is for installing and running Bench-routes locally using a pre-release binary. Here is an example to download the amd64 version of v1.0.0-alpha.2 release.\n1# Download the pre-release version 2wget -O bench-routes.tar.gz https://github.com/bench-routes/bench-routes/releases/download/v1.0.0-alpha.2/src-linux-amd64.tar.gz 3 4# Extract the tar file 5tar -zxvf bench-routes.tar.gz 6 7# Change directory 8cd build/src-linux-amd64 9 10# Run 11./src-linus-amd64.sh This should be enough to turn on Bench-routes. You should get something like this in the logs.\n1[hsingh@localhost src-linux-amd64]$ ./src-linux-amd64.sh 2LOG: 2021/03/10 21:59:14.263315 main.go:55 initializing... 3LOG: 2021/03/10 21:59:14.266505 main.go:295 forming req_res chain ... 4https://www.google.co.insearch 5LOG: 2021/03/10 21:59:14.266584 main.go:295 forming flood_ping chain ... 6LOG: 2021/03/10 21:59:14.266688 db.go:132 creating chain at storage/req-res-delay-monitoring/chunk_req_res_https___www.google.co.in_search.json 7LOG: 2021/03/10 21:59:14.266736 db.go:132 creating chain at storage/flood-ping/chunk_flood_ping_google.co.in.json 8LOG: 2021/03/10 21:59:14.266749 main.go:295 forming jitter chain ... 9LOG: 2021/03/10 21:59:14.266808 main.go:295 forming ping chain ... 10LOG: 2021/03/10 21:59:14.266926 db.go:132 creating chain at storage/ping/chunk_ping_google.co.in.json 11LOG: 2021/03/10 21:59:14.266873 db.go:132 creating chain at storage/jitter/chunk_jitter_google.co.in.json 12https://www.facebook.comsearch 13LOG: 2021/03/10 21:59:14.267624 db.go:132 creating chain at storage/req-res-delay-monitoring/chunk_req_res_https___www.facebook.com_search.json 14LOG: 2021/03/10 21:59:14.267817 db.go:132 creating chain at storage/jitter/chunk_jitter_facebook.com.json 15LOG: 2021/03/10 21:59:14.267914 db.go:132 creating chain at storage/flood-ping/chunk_flood_ping_facebook.com.json 16https://in.search.yahoo.comsearch 17LOG: 2021/03/10 21:59:14.268023 db.go:132 creating chain at storage/ping/chunk_ping_facebook.com.json 18LOG: 2021/03/10 21:59:14.268106 db.go:132 creating chain at storage/req-res-delay-monitoring/chunk_req_res_https___in.search.yahoo.com_search.json 19LOG: 2021/03/10 21:59:14.268163 db.go:132 creating chain at storage/jitter/chunk_jitter_in.search.yahoo.com.json 20LOG: 2021/03/10 21:59:14.268211 db.go:132 creating chain at storage/flood-ping/chunk_flood_ping_in.search.yahoo.com.json 21LOG: 2021/03/10 21:59:14.268397 main.go:326 finished req_res chain 22LOG: 2021/03/10 21:59:14.268360 db.go:132 creating chain at storage/ping/chunk_ping_in.search.yahoo.com.json 23LOG: 2021/03/10 21:59:14.268639 main.go:326 finished jitter chain 24LOG: 2021/03/10 21:59:14.268730 main.go:326 finished flood_ping chain 25LOG: 2021/03/10 21:59:14.268806 main.go:326 finished ping chain 26LOG: 2021/03/10 21:59:14.268891 main.go:89 initial chain formation time: 2.503946ms 27LOG: 2021/03/10 21:59:14.268939 main.go:93 Bench-routes is up and running Docker Right now, we do not provide docker builds at docker hub. This will be done once the projecct moves to beta version. But that does not mean you cannot use docker to make your life easier. We have a dockerfile for this purpose.\nYou can clone the repository and then in the root folder, execute\n1# Build the image in your local docker registry 2docker build -t bench-routes:local-latest . 3 4# Run 5docker run -p 9990:9990 -it bench-routes:local-latest This should start running Bench-routes in the current terminal.\nInstall from source Since the project is in active development in early stages, the recent master commits will always be more stable than the alpha releases. This makes a lot of sense to install and use the most recent code from development.\nYou can install and run from source in 3 ways:\n Using makefile Building the project  Note: Please ensure that the installed go version satisfies 1.15.x and above.  Using makefile Makefile is used to ease the software development process. In order to start running Bench-routes\n1make run This simply runs the following command\n1go run src/*.go 9990 This means that you can also use that command to run directly.\nNote: If you want to run Bench-routes at a port other than :9990, just change the last argument to the port you want to keep.\nBuilding the project You can make a binary file and simply run it.\n1# Build 2go build -o bench-routes ./src/*.go 3 4# Run 5./bench-routes  This documentation is open-source. Please help improve it by filing issues or pull requests here.  ","link":"https://example.com/docs/install/","title":"Installation"},{"body":"Firstly, ensure you have these lines inside your config.toml file\n1[outputs] 2 home = [\u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;,\u0026#34;JSON\u0026#34;] Compose implements fuse.js to enable search functionality. At the time of this writing, search on these theme takes either of this forms:\n1. Passive search This occurs only when the user loads the search page i.e /search/. They can directly navigate to that url. Alternatively, the user can type you search query on the search field and click enter. They will be redirected to the search page which will contain matched results if any.\n2. Live search This behaviour will be obvious as the user types a search query on the search field. All valid search queries, will yield a list of quick links or a simple no matches found. Else, the user will be prompted to continue typing.\n Please note that the results under quick links will be a truncated list of the most relevant results. Only a maximum of 8 items will be returned. This number is pragmatic at best if not arbitrary. On the search page, the number is set to 12.\n Note that live search on the search page will behave differently than on the other pages. Nonetheles, the pages apply the same live search principle.\n Hitting enter while typing on the search page will be moot as that pageâ€™s content will live update as you type in the search word / phrase.\n Customize search feedback labels Use the i18n files to do so.\nWhat is a valid search query A valid search query must be long enough. If the search query can be cast as a float, then it only need contain one or more characters.\nElse the search query must be at least 2 characters long.\n","link":"https://example.com/docs/search/","title":"Search Function"},{"body":"This is contact\n","link":"https://example.com/contact/","title":""},{"body":"Production grade monitoring of APIs Bench-Routes helps you monitor your crucial application endpoints while having a minimal impact on the system.\nBench-Routes is in active development with unstable releases at the moment. We recommend you to wait for stable releases, before you use this at a large scale or in production.  Features:  Monitor application endpoints at scale Inbuilt time-series database, meaning no critical external dependency Minimal performance impact Interactive user-experience Easier visualisation using graphs  Read the Docs\n   ","link":"https://example.com/","title":"Bench-Routes"},{"body":"This is a guide to get started with the project. This is written more like a hello-world like manner, in order to keep it simple.\nRunning Bench-routes is pretty straight forward. You require 2 files mostly:\n Binary file Configuration file (as local-config.yml)  The binary file can be downloaded and installed by following the instructions from here. Once you have downloaded you need to ensure that you have a local-config.yml file.\nBy default, Bench-routes is configured to consider local-config.yml as the default config though this can change in stable releases.\nIf you have followed the instructions by now from installation to making sure that config file is present, you can safely run bench-routes. Based on your method of installation, you can run it:\n ./bench-routes go run ./src/*.go make run  You should have Bench-routes running at port :9990 as default.\nThis documentation is open-source. Please help improve it by filing issues or pull requests here.  ","link":"https://example.com/docs/getting-started/","title":"Getting started"}]